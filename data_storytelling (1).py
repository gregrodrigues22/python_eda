# -*- coding: utf-8 -*-
"""Data Storytelling.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KUfmJE9M6y4Wy2yP8anaV2HX_WF1UuD1
"""

#@title
import pandas as pd
import plotly.graph_objects as go
import numpy as np

#@title Proximidade
df = pd.DataFrame([
    [1, 1], [1, 2], [1, 3],
    [2, 1], [2, 2], [2, 3],
    [3, 1], [3, 2], [3, 3],
    [5, 1], [5, 2], [5, 3],
    [6, 1], [6, 2], [6, 3],
    [7.5, 1], [7.5, 2], [7.5, 3]
], columns=list('ab'))
go.Figure({
    'data': [
        {
            'x': df['a'],
            'y': df['b'],
            'type': 'scatter',
            'mode': 'markers',
            'marker': {'size': 30, 'color': 'gray'}
        }
    ],
    'layout': {
        'paper_bgcolor': 'rgba(0,0,0,0)',
        'plot_bgcolor': 'rgba(0,0,0,0)',
        'xaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': False, 
        },
        'yaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': False, 
        },
        'annotations': [
            {'x': 2, 'y': 3.5, 'text': 'Esse é um grupo único', 'showarrow': False, 'font': {'size': 20}},
            {'x': 6.25, 'y': 3.5, 'text': 'Esse são considerados grupos separados', 'showarrow': False, 'font': {'size': 20}}
        ],
        'width': 900,
        'height': 600
    }
})

#@title Similaridade
df = pd.DataFrame([
    [1, 1, 'gray'], [1, 2, 'gray'], [1, 3, 'gray'],
    [2, 1, 'gray'], [2, 2, 'gray'], [2, 3, 'gray'],
    [3, 1, 'gray'], [3, 2, 'gray'], [3, 3, 'gray'],
    [4, 1, 'red'], [4, 2, 'red'], [4, 3, 'red'],
    [5, 1, 'red'], [5, 2, 'red'], [5, 3, 'red']
], columns=list('abc'))
go.Figure({
    'data': [
        {
            'x': df['a'],
            'y': df['b'],
            'type': 'scatter',
            'mode': 'markers',
            'marker': {'size': 30, 'color': df['c']}
        }
    ],
    'layout': {
        'paper_bgcolor': 'rgba(0,0,0,0)',
        'plot_bgcolor': 'rgba(0,0,0,0)',
        'xaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': False, 
        },
        'yaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': False, 
        },
        'annotations': [
            {'x': 2, 'y': 3.5, 'text': 'Grupo A', 'showarrow': False, 'font': {'size': 20}},
            {'x': 4.5, 'y': 0.5, 'text': 'Grupo B', 'showarrow': False, 'font': {'size': 20}}
        ],
        'width': 900,
        'height': 600
    }
})

#@title Acercamento
df = pd.DataFrame([
    [1, 1], [1, 2], [1, 3], [1, 4], [1, 5],
    [2, 1], [2, 2], [2, 3], [2, 4], [2, 5],
    [3, 1], [3, 2], [3, 3], [3, 4], [3, 5],
    [4, 1], [4, 2], [4, 3], [4, 4], [4, 5],
    [5, 1], [5, 2], [5, 3], [5, 4], [5, 5]
], columns=list('ab'))
go.Figure({
    'data': [
        {
            'x': df['a'],
            'y': df['b'],
            'type': 'scatter',
            'mode': 'markers',
            'marker': {'size': 30, 'color': 'gray'}
        }
    ],
    'layout': {
        'paper_bgcolor': 'rgba(0,0,0,0)',
        'plot_bgcolor': 'rgba(0,0,0,0)',
        'xaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': False, 
        },
        'yaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': False, 
        },
        'width': 600,
        'height': 600,
        'shapes': [{
            'type': "rect",
            'x0': 1.5, 'y0': 1.5, 'x1': 3.5, 'y1': 3.5,
            'line': {'color': 'pink', 'width': 5}
        }]
    }
})

"""## Uso de Cores

"""

#@title
lst1 = ["Banana", "Maçã", "Laranja", "Uva"]
lst2= [5,7,1,2]
frutas = pd.DataFrame({'Nome': lst1, 'Qtde': lst2})

go.Figure({
    'data': [
        {
            'x': frutas['Nome'],
            'y': frutas['Qtde'],
            'type': 'bar',
            'textposition':'auto',
            'text':frutas['Qtde'],
            'marker': {'color': 'rgb(51,102,153)'}
        }
    ],
    'layout': {
        'paper_bgcolor': 'rgba(0,0,0,0)',
        'plot_bgcolor': 'rgba(0,0,0,0)',
        'xaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': True, 

        },
        'yaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': False,            
        }
    }
})

"""## Regra 60-30-10"""



"""## Fundo claro"""

#@title
lst3 = ["Cachorro", "Gato", "Tartaruga", "Peixe"]
lst5= [5,15,10,20]
animais = pd.DataFrame({'Nome': lst3, 'Qtde': lst5})

go.Figure({
    'data': [
        {
            'x': animais['Nome'],
            'y': animais['Qtde'],
            'type': 'bar',
            'textposition':'auto',
            'text':animais['Qtde'],
             'marker': {'color': 'rgb(140, 70, 70)'}
        }
    ],
    'layout': {
        'paper_bgcolor': 'rgba(0,0,0,0)',
        'plot_bgcolor': 'rgba(0,0,0,0)',
        'xaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': True, 
        },
        'yaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': False, 
        }
    }
})

"""## Fundo escuro"""

#@title
lst3 = ["a", "b", "c", "d"]
lst5= [50,15,5,20]
alf = pd.DataFrame({'Nome': lst3, 'Qtde': lst5})

go.Figure({
    'data': [
        {
            'x': alf['Nome'],
            'y': alf['Qtde'],
            'type': 'bar',
            'textposition':'auto',
            'text':alf['Qtde'],
             'marker': {'color': 'rgb(242, 240, 240)'}
        }
    ],
    'layout': {
        'paper_bgcolor': 'rgb(28, 27, 27)',
        'plot_bgcolor': 'rgb(28, 27, 27)',
        'xaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': True, 
            'color': 'rgb(242, 240, 240)'
        },
        'yaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': False, 
        }
    }
})

"""## Acessibilidade"""



"""## Gráficos Combinados"""

#@title
lst3 = ["Cachorro", "Gato", "Tartaruga", "Peixe"]
lst5= [5,15,10,20]
animais = pd.DataFrame({'Nome': lst3, 'Qtde': lst5})

lst6 = ["Cachorro", "Gato", "Tartaruga", "Peixe"]
lst7= [8,16,6,8]
numbers = pd.DataFrame({'Nome': lst6, 'Qtde': lst7})

go.Figure({
    'data': [
        {
            'x': animais['Nome'],
            'y': animais['Qtde'],
            'type': 'bar',
            'textposition':'auto',
            'text':animais['Qtde'],
             'marker': {'color': 'rgb(160, 160, 160)'},
        },
         {
            'x': numbers['Nome'],
            'y': numbers['Qtde'],
            'type': 'scatter',
            'mode': 'lines',
            'textposition':'top left',
            'text':numbers['Qtde'],
             'marker': {'color': 'rgb(255,153,51)'}
        }
    ],
    'layout': {
        'paper_bgcolor': 'rgba(0,0,0,0)',
        'plot_bgcolor': 'rgba(0,0,0,0)',
        'xaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': True, 
        },
        'yaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': False, 
        }
    }
})

#@title
lst3 = ["Cachorro", "Gato", "Tartaruga", "Peixe"]
lst5= [5,15,10,20]
animais = pd.DataFrame({'Nome': lst3, 'Qtde': lst5})

lst6 = ["Cachorro", "Gato", "Tartaruga", "Peixe"]
lst7= [8,16,6,8]
numbers = pd.DataFrame({'Nome': lst6, 'Qtde': lst7})

go.Figure({
    'data': [
        {
            'x': animais['Nome'],
            'y': animais['Qtde'],
            'type': 'scatter',
            'mode': 'lines',
            'textposition':'top left',
            'text':animais['Qtde'],
             'marker': {'color': 'rgb(0,128,155)'},
        },
         {
            'x': numbers['Nome'],
            'y': numbers['Qtde'],
            'type': 'scatter',
            'mode': 'lines',
            'textposition':'top left',
            'text':numbers['Qtde'],
             'marker': {'color': 'rgb(255,153,51)'}
        }
    ],
    'layout': {
        'paper_bgcolor': 'rgba(0,0,0,0)',
        'plot_bgcolor': 'rgba(0,0,0,0)',
        'xaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': True, 
        },
        'yaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': False, 
        }
    }
})

#@title
lst2 = ["Doméstico", "Doméstico", "Selvagem", "Doméstico"]
lst3 = ["Cachorro", "Gato", "Tartaruga", "Peixe"]
lst5= [5,15,10,20]
animais = pd.DataFrame({'Nome': lst3, 'Qtde': lst5,'tipo':lst2})


go.Figure({
    'data': [
        {
            'x': animais['tipo'],
            'y': animais['Qtde'],
            'type': 'bar',
            'text':animais['Qtde'],
            'marker':dict(
            color='rgba(145, 170, 205, 0.8)',
            line=dict(color='rgba(2, 26, 62, 0.8)', width=3)
    )
        },

    ],
    'layout': {
        'paper_bgcolor': 'rgba(0,0,0,0)',
        'plot_bgcolor': 'rgba(0,0,0,0)',
        'barmode':'stack',
        'title':'Stack graph',
        'xaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': True, 
        },
        'yaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': False, 
        }
    }
})

#@title
lst2 = ["Doméstico", "Doméstico", "Selvagem", "Doméstico"]
lst3 = ["Cachorro", "Gato", "Tartaruga", "Peixe"]
lst5= [5,15,10,20]
animais = pd.DataFrame({'Nome': lst3, 'Qtde': lst5,'tipo':lst2})


go.Figure({
    'data': [
        {
            'x': animais['tipo'],
            'y': animais['Qtde'],
            'type': 'bar',
            'text':animais['Qtde'],
        },

    ],
    'layout': {
        'paper_bgcolor': 'rgba(0,0,0,0)',
        'plot_bgcolor': 'rgba(0,0,0,0)',
        'barmode':'stack',
        'title':'Stack graph',
        'xaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': True, 
        },
        'yaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': False, 
        }
    }
})

#@title WIP pareto chart

from scipy.stats import norm
df = (
    pd.Series(norm(5, 1).rvs(100), name='normal')
    .sort_values(ascending=False).to_frame().reset_index(drop=True)
    .assign(share=lambda x: x['normal']/x['normal'].sum())
    .assign(pareto=lambda x: x['normal'].cumsum()/x['normal'].sum())
)
go.Figure({
    'data': [
        {'x': df.index, 'y': df['normal'], 'type': 'bar', 'name': 'normal (left)', 'marker': {'color': 'lightblue'}},
        {'x': df.index, 'y': df['share'], 'yaxis': 'y3', 'name': 'share (left)'},
        {'x': df.index, 'y': df['pareto'], 'yaxis': 'y2', 'name': 'pareto (right)'}
    ],
    'layout': {
        'xaxis': {'domain': [0.08, 0.95]},
        'yaxis': {'title': 'normal'},
        'yaxis2': {'overlaying': 'y', 'side': 'right', 'tickformat': ',.0%', 'title': 'pareto'},
        'yaxis3': {'overlaying': 'y', 'side': 'left', 'position': 0.02, 'anchor': 'free',  'tickformat': ',.2%', 'title': 'share'},
        'hovermode': 'x'
    }
})

df



"""# Métodos de Visualização

Data Visualization is the most comfortable and intuitive way for human brain to effectively understand any information. For anyone working with data, the ability to create beautiful intuitive vizualisations is a very important skill to have to be able to effectively convey the findings and drive actions.

# **Comparação**

## Barras de larguras diferentes
"""

#@title
lst3 = ["Cachorro", "Gato", "Tartaruga", "Peixe"]
lst5= [5,15,10,20]
animais = pd.DataFrame({'Nome': lst3, 'Qtde': lst5})

go.Figure({
    'data': [
        {
            'x': animais['Nome'],
            'y': animais['Qtde'],
            'type': 'bar',
            'textposition':'auto',
            'text':animais['Qtde'],
            'width': [1.2,0.6,0.2,0.6],
             'marker': {'color': 'rgb(102, 0, 102)'}
        }
    ],
    'layout': {
        'paper_bgcolor': 'rgba(0,0,0,0)',
        'plot_bgcolor': 'rgba(0,0,0,0)',
        'xaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': True, 
        },
        'yaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': False, 
        }
    }
})

"""## Gráfico de barras horizontal"""

#@title
lst3 = ["Cachorro", "Gato", "Tartaruga", "Peixe"]
lst5= [5,15,10,20]
animais = pd.DataFrame({'Nome': lst3, 'Qtde': lst5})

go.Figure({
    'data': [
        {
            'x': animais['Qtde'],
            'y': animais['Nome'],
            'type': 'bar',
            'textposition':'auto',
            'text':animais['Nome'],
            'orientation': 'h',
             'marker': {'color': 'rgb(102, 0, 102)'}
        }
    ],
    'layout': {
        'paper_bgcolor': 'rgba(0,0,0,0)',
        'plot_bgcolor': 'rgba(0,0,0,0)',
        'xaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': True, 
            
        },
        'yaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': False, 
        }

    }
})

"""## Gráfico de radar"""

#@title
lst3 = ["Hist", "Math", "Bio", "Art","Eng"]
lst5= [8,10,5,6,9]
school = pd.DataFrame({'Nome': lst3, 'Qtde': lst5})

go.Figure({
    'data': [
        {
            'text': school['Nome'],
            'r':school['Qtde'],
            'type': 'barpolar',
            'marker': {'color': 'rgb(255, 204, 255)'}

        }
    ]
})

"""# **Relação**

## Scatter Plot
"""

#@title

go.Figure({
    'data': [
        {
            'x': np.random.randint(1,101,100),
            'y': np.random.randint(1,101,100) ,
            'type': 'scatter',
            'mode': 'markers',
             'marker': {'size': 20,'color': 'rgb(102, 0, 102)'}

        }
    ],
    'layout': {

        'xaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': True, 
            
        },
        'yaxis': {
            'showgrid': True,
            'zeroline': True,
            'visible': True, 
        }

    }
})

"""## Bubble plot"""

#@title
go.Figure({
    'data': [
        {
            'x': np.random.randint(1,101,100),
            'y': np.random.randint(1,101,100) ,
            'type': 'scatter',
            'mode': 'markers',
             'marker': {'size': np.random.randint(1,101,100),'color': 'rgb(102, 0, 102)'}

        }
    ],
    'layout': {

        'xaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': True, 
            
        },
        'yaxis': {
            'showgrid': True,
            'zeroline': True,
            'visible': True, 
        }

    }
})

"""# **Distribuição**

## Histograma Barras
"""

#@title
go.Figure({
    'data': [
        {
            'x': np.random.randint(1,101,100),
            'type': 'histogram',
            'marker': {'color': 'rgb(102, 0, 102)'}

        }
    ],
    'layout': {

        'xaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': True, 
            
        }

    }
})

"""## **Composição**

## Funil
"""

#@title
colors= ('rgb(255, 204, 255)','rgb(102, 0, 102)','rgb(153, 0, 153)','rgb(51, 0, 51)')
lst3 = ["Acessos", "Produto", "Checkout", "Compra"]
lst5= [40,30,20,10]
compras = pd.DataFrame({'Nome': lst3, 'Qtde': lst5})

go.Figure({
    'data': [
        {
            'ids': compras['Nome'],
            'x':compras['Qtde'],
            'type': 'funnel',
            'marker': {'color': ('rgb(25, 77, 50)','rgb(51, 153, 102)','rgb(102, 204, 153)','rgb(159, 223, 191)')}

        }
    ]
 
})

"""## Gráfico de pizza """

#@title
colors= ('rgb(255, 204, 255)','rgb(102, 0, 102)','rgb(153, 0, 153)','rgb(51, 0, 51)')
lst3 = ["Cachorro", "Gato", "Tartaruga", "Peixe"]
lst5= [30,30,20,20]
animais = pd.DataFrame({'Nome': lst3, 'Qtde': lst5})

go.Figure({
    'data': [
        {
            'labels': animais['Nome'],
            'values':animais['Qtde'],
            'type': 'pie',
            'marker': {'colors': colors}

        }
    ]
 
})

"""## Gráfico Cascata"""

#@title

lst3 = ["Jan", "Fev", "Mar", "Abr","Mai","Total"]
lst5= [30,20,20,-50,-15,5]
meses = pd.DataFrame({'Nome': lst3, 'Qtde': lst5})

go.Figure({
    'data': [
        {
            'x': meses['Nome'],
            'y':meses['Qtde'],
            'type': 'waterfall',
             'textposition':'auto',
            'text':meses['Qtde'],

        }
    ],
    'layout': {

        'xaxis': {
            'showgrid': False,
            'zeroline': False,
            'visible': True, 
            
        },
        'yaxis': {
            'showgrid': True,
            'zeroline': True,
            'visible': True, 
        }

    }
})

"""## Gráfico de árvore"""

#@title
colors= ('rgb(153, 102, 0)','rgb(204, 136, 0)','rgb(255, 170, 0)','rgb(255, 187, 51)','rgb(255, 212, 128)')
lst3 = ["Total", "Categorias", "Saúde", "Alimentação","Educação","Transporte"]
lst5= [100,100,40,20,30,10]
lst6 = ["","Total","Categorias","Categorias","Categorias","Categorias"]
meses = pd.DataFrame({'id': lst3, 'Qtde': lst5, "parent":lst6})

go.Figure({
    'data': [
        {
            'labels': meses['id'],
            'parents': meses["parent"],           
            'values': meses["Qtde"],
             'branchvalues':'total',
              'text': meses["Qtde"],
            'type': 'treemap',
           'marker': {'colors': colors}

        }
    ]
})

"""# Dicas Extras

**Ferramenta de acessibilidade Adobe:** https://color.adobe.com/create/color-contrast-analyzer

**Podcast:** https://www.storytellingwithdata.com/podcast

**Livro:**  Storytelling with Data: A Data Visualization Guide for Business Professionals (Storytelling com Dados: Um guia sobre visualização de dados para profissionais de negócios) Book by Cole Nussbaumer Knaflic

**Documentação plotly:** https://plotly.com/python/reference/bar/

**Vídeo:** https://www.youtube.com/watch?v=8EMW7io4rSI

---
"""